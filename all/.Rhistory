ungroup() %>%
dplyr::select(sample_id)
#sample names
sample_E_name <- df_k$sample_id
knitr::opts_chunk$set(echo = TRUE)
library(biomformat)
library(dada2)
library(matR)
library(ggplot2)
library(tidyverse)
library(phyloseq); packageVersion("phyloseq")
library(Biostrings); packageVersion("Biostrings")
library(ggplot2); packageVersion("ggplot2")
library(compositions)
library(timeOmics)
library(lmms)
library(stringi)
library(purrr)
#setting the correct directory
knitr::opts_knit$set(root.dir = '~/Desktop/Microbial Project/Reading 16s BIOM file 2/Data/all')
mouse_id_meta<-lapply(LETTERS[c(1:6)],
function(x){return(paste0("Mouse_",x,1:3))})
#
df_A<-df_vanco %>%
dplyr::filter(host_subject_id %in% mouse_id_meta,
day_of_experiment_numerical %in% 1:lowdays) %>%
dplyr::select(host_subject_id,sample_id)
#filters out only 24 days of data
df_k<-df_vanco %>%
dplyr::filter(day_of_experiment_numerical %in% 1:lowdays) %>%
ungroup() %>%
dplyr::select(sample_id)
#sample names
sample_E_name <- df_k$sample_id
sample_E_name
knitr::opts_chunk$set(echo = TRUE)
library(biomformat)
library(dada2)
library(matR)
library(ggplot2)
library(tidyverse)
library(phyloseq); packageVersion("phyloseq")
library(Biostrings); packageVersion("Biostrings")
library(ggplot2); packageVersion("ggplot2")
library(compositions)
library(timeOmics)
library(lmms)
library(stringi)
library(purrr)
#setting the correct directory
knitr::opts_knit$set(root.dir = '~/Desktop/Microbial Project/Reading 16s BIOM file 2/Data/all')
#function to get the lowest amount of days to which there is continuous data across the board.
lowest_day <- function(variables, df) {
#variables = mouse_id
#df = data frame in question
full<-1:60
daylist <- df %>% dplyr::filter(host_subject_id == variables) %>%
ungroup() %>%
dplyr::select(day_of_experiment_numerical) %>% pull()
smallest <- setdiff(full,daylist) %>% min() - 1
return(smallest)
}
#does a global search for the lowest day of continuous data
lowdays<-lapply(mouse_id,lowest_day,df=df_tsv4) %>% unlist() %>% min()
lowdays
#performs the "24" day cut off
df_vanco <- df_tsv4 %>%
dplyr::filter(day_of_experiment_numerical %in% 1:lowdays)
#further cutting of the dataset
df_present <- df_vanco %>% dplyr::select(sample_id, title, antibiotic,
phase_of_experiment,
level_of_colonisation,
route_abx_administration,
day_of_experiment_numerical,
average_cfu_counts,
cfu_counts)
df_present %>% ungroup() %>% select(sample_id)
knitr::opts_chunk$set(echo = TRUE)
library(biomformat)
library(dada2)
library(matR)
library(ggplot2)
library(tidyverse)
library(phyloseq); packageVersion("phyloseq")
library(Biostrings); packageVersion("Biostrings")
library(ggplot2); packageVersion("ggplot2")
library(compositions)
library(timeOmics)
library(lmms)
library(stringi)
library(purrr)
#setting the correct directory
knitr::opts_knit$set(root.dir = '~/Desktop/Microbial Project/Reading 16s BIOM file 2/Data/all')
#function to get the lowest amount of days to which there is continuous data across the board.
lowest_day <- function(variables, df) {
#variables = mouse_id
#df = data frame in question
full<-1:60
daylist <- df %>% dplyr::filter(host_subject_id == variables) %>%
ungroup() %>%
dplyr::select(day_of_experiment_numerical) %>% pull()
smallest <- setdiff(full,daylist) %>% min() - 1
return(smallest)
}
#does a global search for the lowest day of continuous data
lowdays<-lapply(mouse_id,lowest_day,df=df_tsv4) %>% unlist() %>% min()
lowdays
#performs the "24" day cut off
df_vanco <- df_tsv4 %>%
dplyr::filter(day_of_experiment_numerical %in% 1:lowdays)
#further cutting of the dataset
df_present <- df_vanco %>% dplyr::select(sample_id, title, antibiotic,
phase_of_experiment,
level_of_colonisation,
route_abx_administration,
day_of_experiment_numerical,
average_cfu_counts,
cfu_counts)
df_present %>% ungroup() %>% dplyr::select(sample_id)
knitr::opts_chunk$set(echo = TRUE)
library(biomformat)
library(dada2)
library(matR)
library(ggplot2)
library(tidyverse)
library(phyloseq); packageVersion("phyloseq")
library(Biostrings); packageVersion("Biostrings")
library(ggplot2); packageVersion("ggplot2")
library(compositions)
library(timeOmics)
library(lmms)
library(stringi)
library(purrr)
#setting the correct directory
knitr::opts_knit$set(root.dir = '~/Desktop/Microbial Project/Reading 16s BIOM file 2/Data/all')
#function to get the lowest amount of days to which there is continuous data across the board.
lowest_day <- function(variables, df) {
#variables = mouse_id
#df = data frame in question
full<-1:60
daylist <- df %>% dplyr::filter(host_subject_id == variables) %>%
ungroup() %>%
dplyr::select(day_of_experiment_numerical) %>% pull()
smallest <- setdiff(full,daylist) %>% min() - 1
return(smallest)
}
#does a global search for the lowest day of continuous data
lowdays<-lapply(mouse_id,lowest_day,df=df_tsv4) %>% unlist() %>% min()
lowdays
#performs the "24" day cut off
df_vanco <- df_tsv4 %>%
dplyr::filter(day_of_experiment_numerical %in% 1:lowdays)
#further cutting of the dataset
df_present <- df_vanco %>% dplyr::select(sample_id, title, antibiotic,
phase_of_experiment,
level_of_colonisation,
route_abx_administration,
day_of_experiment_numerical,
average_cfu_counts,
cfu_counts)
sample_E_name <- df_present %>% ungroup() %>%
dplyr::select(sample_id) %>%
unlist()
sample_E_name
knitr::opts_chunk$set(echo = TRUE)
library(biomformat)
library(dada2)
library(matR)
library(ggplot2)
library(tidyverse)
library(phyloseq); packageVersion("phyloseq")
library(Biostrings); packageVersion("Biostrings")
library(ggplot2); packageVersion("ggplot2")
library(compositions)
library(timeOmics)
library(lmms)
library(stringi)
library(purrr)
#setting the correct directory
knitr::opts_knit$set(root.dir = '~/Desktop/Microbial Project/Reading 16s BIOM file 2/Data/all')
#function to get the lowest amount of days to which there is continuous data across the board.
lowest_day <- function(variables, df) {
#variables = mouse_id
#df = data frame in question
full<-1:60
daylist <- df %>% dplyr::filter(host_subject_id == variables) %>%
ungroup() %>%
dplyr::select(day_of_experiment_numerical) %>% pull()
smallest <- setdiff(full,daylist) %>% min() - 1
return(smallest)
}
#does a global search for the lowest day of continuous data
lowdays<-lapply(mouse_id,lowest_day,df=df_tsv4) %>% unlist() %>% min()
lowdays
#performs the "24" day cut off
df_vanco <- df_tsv4 %>%
dplyr::filter(day_of_experiment_numerical %in% 1:lowdays)
#further cutting of the dataset
df_present <- df_vanco %>% dplyr::select(sample_id, title, antibiotic,
phase_of_experiment,
level_of_colonisation,
route_abx_administration,
day_of_experiment_numerical,
average_cfu_counts,
cfu_counts)
sample_E_name <- df_present %>% ungroup() %>%
dplyr::select(sample_id)
sample_E_name
knitr::opts_chunk$set(echo = TRUE)
library(biomformat)
library(dada2)
library(matR)
library(ggplot2)
library(tidyverse)
library(phyloseq); packageVersion("phyloseq")
library(Biostrings); packageVersion("Biostrings")
library(ggplot2); packageVersion("ggplot2")
library(compositions)
library(timeOmics)
library(lmms)
library(stringi)
library(purrr)
#setting the correct directory
knitr::opts_knit$set(root.dir = '~/Desktop/Microbial Project/Reading 16s BIOM file 2/Data/all')
#function to get the lowest amount of days to which there is continuous data across the board.
lowest_day <- function(variables, df) {
#variables = mouse_id
#df = data frame in question
full<-1:60
daylist <- df %>% dplyr::filter(host_subject_id == variables) %>%
ungroup() %>%
dplyr::select(day_of_experiment_numerical) %>% pull()
smallest <- setdiff(full,daylist) %>% min() - 1
return(smallest)
}
#does a global search for the lowest day of continuous data
lowdays<-lapply(mouse_id,lowest_day,df=df_tsv4) %>% unlist() %>% min()
lowdays
#performs the "24" day cut off
df_vanco <- df_tsv4 %>%
dplyr::filter(day_of_experiment_numerical %in% 1:lowdays)
#further cutting of the dataset
df_present <- df_vanco %>% dplyr::select(sample_id, title, antibiotic,
phase_of_experiment,
level_of_colonisation,
route_abx_administration,
day_of_experiment_numerical,
average_cfu_counts,
cfu_counts)
sample_E_name <- df_present %>% ungroup() %>%
dplyr::pull(sample_id)
sample_E_name
knitr::opts_chunk$set(echo = TRUE)
library(biomformat)
library(dada2)
library(matR)
library(ggplot2)
library(tidyverse)
library(phyloseq); packageVersion("phyloseq")
library(Biostrings); packageVersion("Biostrings")
library(ggplot2); packageVersion("ggplot2")
library(compositions)
library(timeOmics)
library(lmms)
library(stringi)
library(purrr)
#setting the correct directory
knitr::opts_knit$set(root.dir = '~/Desktop/Microbial Project/Reading 16s BIOM file 2/Data/all')
sample_E_name <- df_present %>% ungroup() %>%
dplyr::pull(sample_id)
percent = 0.01
df_E <- x_merged %>% dplyr::select(Row.names, all_of(sample_E_name)) %>%
filter(rowSums(.[,2:ncol(.)])*100/(sum(rowSums(.[,2:ncol(.)]))) > percent) %>%
mutate_if(is.numeric, function(x) x+1)
knitr::opts_chunk$set(echo = TRUE)
library(biomformat)
library(dada2)
library(matR)
library(ggplot2)
library(tidyverse)
library(phyloseq); packageVersion("phyloseq")
library(Biostrings); packageVersion("Biostrings")
library(ggplot2); packageVersion("ggplot2")
library(compositions)
library(timeOmics)
library(lmms)
library(stringi)
library(purrr)
#setting the correct directory
knitr::opts_knit$set(root.dir = '~/Desktop/Microbial Project/Reading 16s BIOM file 2/Data/all')
percent = 0.01
df_E <- x_merged %>% dplyr::select("16S_SEQUENCE", all_of(sample_E_name)) %>%
filter(rowSums(.[,2:ncol(.)])*100/(sum(rowSums(.[,2:ncol(.)]))) > percent) %>%
mutate_if(is.numeric, function(x) x+1)
x_merged
x_merged %>% dplyr::select("16S_SEQUENCE", all_of(sample_E_name)) %>% View()
knitr::opts_chunk$set(echo = TRUE)
library(biomformat)
library(dada2)
library(matR)
library(ggplot2)
library(tidyverse)
library(phyloseq); packageVersion("phyloseq")
library(Biostrings); packageVersion("Biostrings")
library(ggplot2); packageVersion("ggplot2")
library(compositions)
library(timeOmics)
library(lmms)
library(stringi)
library(purrr)
#setting the correct directory
knitr::opts_knit$set(root.dir = '~/Desktop/Microbial Project/Reading 16s BIOM file 2/Data/all')
percent = 0.01
df_E <- x_merged %>% dplyr::select("16S_SEQUENCE", all_of(sample_E_name)) %>%
filter(rowSums(.[,2:ncol(.)])*100/(sum(rowSums(.[,2:ncol(.)]))) > percent) %>%
mutate_if(is.numeric, function(x) x+1)
df_E <- x_merged %>% dplyr::select("16S_SEQUENCE", all_of(sample_E_name)) %>%
knitr::opts_chunk$set(echo = TRUE)
library(biomformat)
library(dada2)
library(matR)
library(ggplot2)
library(tidyverse)
library(phyloseq); packageVersion("phyloseq")
library(Biostrings); packageVersion("Biostrings")
library(ggplot2); packageVersion("ggplot2")
library(compositions)
library(timeOmics)
library(lmms)
library(stringi)
library(purrr)
#setting the correct directory
knitr::opts_knit$set(root.dir = '~/Desktop/Microbial Project/Reading 16s BIOM file 2/Data/all')
percent = 0.01
df_E <- x_merged %>% dplyr::select("16S_SEQUENCE", all_of(sample_E_name)) %>%
dplyr::filter(rowSums(.[,2:ncol(.)])*100/(sum(rowSums(.[,2:ncol(.)]))) > percent) %>%
dplyr::mutate_if(is.numeric, function(x) x+1)
x_merged
x_merged %>% View()
knitr::opts_chunk$set(echo = TRUE)
library(biomformat)
library(dada2)
library(matR)
library(ggplot2)
library(tidyverse)
library(phyloseq); packageVersion("phyloseq")
library(Biostrings); packageVersion("Biostrings")
library(ggplot2); packageVersion("ggplot2")
library(compositions)
library(timeOmics)
library(lmms)
library(stringi)
library(purrr)
#setting the correct directory
knitr::opts_knit$set(root.dir = '~/Desktop/Microbial Project/Reading 16s BIOM file 2/Data/all')
percent = 0.01
df_E <- x_merged %>% column_to_rownames(var="16S_SEQUENCE") %>%
dplyr::select(all_of(sample_E_name)) %>%
dplyr::filter(rowSums(.[,2:ncol(.)])*100/(sum(rowSums(.[,2:ncol(.)]))) > percent) %>%
dplyr::mutate_if(is.numeric, function(x) x+1)
x_merged %>% column_to_rownames(var="16S_SEQUENCE") %>% View()
knitr::opts_chunk$set(echo = TRUE)
library(biomformat)
library(dada2)
library(matR)
library(ggplot2)
library(tidyverse)
library(phyloseq); packageVersion("phyloseq")
library(Biostrings); packageVersion("Biostrings")
library(ggplot2); packageVersion("ggplot2")
library(compositions)
library(timeOmics)
library(lmms)
library(stringi)
library(purrr)
#setting the correct directory
knitr::opts_knit$set(root.dir = '~/Desktop/Microbial Project/Reading 16s BIOM file 2/Data/all')
percent = 0.01
df_E <- x_merged %>% column_to_rownames(var="16S_SEQUENCE") %>% as.numeric()
df_E1 <- x_merged %>% column_to_rownames(var="16S_SEQUENCE")
df_E1
knitr::opts_chunk$set(echo = TRUE)
library(biomformat)
library(dada2)
library(matR)
library(ggplot2)
library(tidyverse)
library(phyloseq); packageVersion("phyloseq")
library(Biostrings); packageVersion("Biostrings")
library(ggplot2); packageVersion("ggplot2")
library(compositions)
library(timeOmics)
library(lmms)
library(stringi)
library(purrr)
#setting the correct directory
knitr::opts_knit$set(root.dir = '~/Desktop/Microbial Project/Reading 16s BIOM file 2/Data/all')
percent = 0.01
df_E <- x_merged %>% column_to_rownames(var="16S_SEQUENCE") %>%
mutate_all(., function(x) as.numeric(as.character(x))) %>%
dplyr::select(all_of(sample_E_name)) %>%
dplyr::filter(rowSums(.[,2:ncol(.)])*100/(sum(rowSums(.[,2:ncol(.)]))) > percent) %>%
dplyr::mutate_if(is.numeric, function(x) x+1)
knitr::opts_chunk$set(echo = TRUE)
library(biomformat)
library(dada2)
library(matR)
library(ggplot2)
library(tidyverse)
library(phyloseq); packageVersion("phyloseq")
library(Biostrings); packageVersion("Biostrings")
library(ggplot2); packageVersion("ggplot2")
library(compositions)
library(timeOmics)
library(lmms)
library(stringi)
library(purrr)
#setting the correct directory
knitr::opts_knit$set(root.dir = '~/Desktop/Microbial Project/Reading 16s BIOM file 2/Data/all')
#corrects the directory
setwd("~/Desktop/Microbial Project/Reading 16s BIOM file 2")
taxa_clasification <- assignTaxonomy(seq, "Data/silva_nr99_v138.1_wSpecies_train_set.fa.gz", multithread=TRUE)
write.csv(taxa_clasification, "Data/taxanomy3.csv")
#fixing annoying row issue.
taxa_clasification2 <- cbind(Row.names = rownames(taxa_clasification),
taxa_clasification)
rownames(taxa_clasification2) <- 1:nrow(taxa_clasification2)
df_taxa<-merge(taxa_clasification2, df_E,
by = "Row.names", all = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(biomformat)
library(dada2)
library(matR)
library(ggplot2)
library(tidyverse)
library(phyloseq); packageVersion("phyloseq")
library(Biostrings); packageVersion("Biostrings")
library(ggplot2); packageVersion("ggplot2")
library(compositions)
library(timeOmics)
library(lmms)
library(stringi)
library(purrr)
#setting the correct directory
knitr::opts_knit$set(root.dir = '~/Desktop/Microbial Project/Reading 16s BIOM file 2/Data/all')
df_taxa<-merge(taxa_clasification2, df_E,
by = "row.names", all = TRUE)
taxa_clasification2
taxa_clasification2 %>% View()
df_E
df_E %>% View()
knitr::opts_chunk$set(echo = TRUE)
library(biomformat)
library(dada2)
library(matR)
library(ggplot2)
library(tidyverse)
library(phyloseq); packageVersion("phyloseq")
library(Biostrings); packageVersion("Biostrings")
library(ggplot2); packageVersion("ggplot2")
library(compositions)
library(timeOmics)
library(lmms)
library(stringi)
library(purrr)
#setting the correct directory
knitr::opts_knit$set(root.dir = '~/Desktop/Microbial Project/Reading 16s BIOM file 2/Data/all')
percent = 0.01
df_E <- x_merged %>% column_to_rownames(var="16S_SEQUENCE") %>%
mutate_all(., function(x) as.numeric(as.character(x))) %>% #converts the data frame to numeric
dplyr::select(all_of(sample_E_name)) %>%
dplyr::filter(rowSums(.[,2:ncol(.)])*100/(sum(rowSums(.[,2:ncol(.)]))) > percent) %>%
dplyr::mutate_if(is.numeric, function(x) x+1)  %>%
tibble::rownames_to_column(df, "Row.names")
knitr::opts_chunk$set(echo = TRUE)
library(biomformat)
library(dada2)
library(matR)
library(ggplot2)
library(tidyverse)
library(phyloseq); packageVersion("phyloseq")
library(Biostrings); packageVersion("Biostrings")
library(ggplot2); packageVersion("ggplot2")
library(compositions)
library(timeOmics)
library(lmms)
library(stringi)
library(purrr)
#setting the correct directory
knitr::opts_knit$set(root.dir = '~/Desktop/Microbial Project/Reading 16s BIOM file 2/Data/all')
percent = 0.01
df_E <- x_merged %>% column_to_rownames(var="16S_SEQUENCE") %>%
mutate_all(., function(x) as.numeric(as.character(x))) %>% #converts the data frame to numeric
dplyr::select(all_of(sample_E_name)) %>%
dplyr::filter(rowSums(.[,2:ncol(.)])*100/(sum(rowSums(.[,2:ncol(.)]))) > percent) %>%
dplyr::mutate_if(is.numeric, function(x) x+1)  %>%
tibble::rownames_to_column(., "Row.names")
#corrects the directory
setwd("~/Desktop/Microbial Project/Reading 16s BIOM file 2")
taxa_clasification <- assignTaxonomy(seq, "Data/silva_nr99_v138.1_wSpecies_train_set.fa.gz", multithread=TRUE)
write.csv(taxa_clasification, "Data/taxanomy3.csv")
#fixing annoying row issue.
taxa_clasification2 <- cbind(Row.names = rownames(taxa_clasification),
taxa_clasification)
rownames(taxa_clasification2) <- 1:nrow(taxa_clasification2)
df_taxa<-merge(taxa_clasification2, df_E,
by = "Row.names", all = TRUE)
#assigns to different data variable for convenience of prototyping
df_taxa2<-df_taxa
#add OTUs labels
rownames(df_taxa2) <- paste0("OTU", 1:nrow(df_taxa2))
df_taxa2 <- df_taxa2 %>% add_column(OTU = paste0("OTU", 1:nrow(df_taxa2)), .before = "Row.names")
